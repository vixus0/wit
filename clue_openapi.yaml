openapi: 3.0.0
info:
  title: Clue API
  version: 2.0.0
paths:
  /addresses:
    get:
      tags:
        - Address Register
      operationId: getAllAddresses
      summary: Get a collection of addresses
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Address Register
      operationId: postAddress
      summary: Add an address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '201':
          description: Address created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          headers:
            location:
              description: URL for the newly created Address
              schema:
                type: string
  '/addresses/{addressId}':
    get:
      tags:
        - Address Register
      operationId: getAddress
      summary: Get an address
      parameters:
        - name: addressId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
  '/addresses/{addressId}/attachments':
    post:
      tags:
        - Address Register
      operationId: postAddressAttachment
      summary: Add an attachment to an address
      parameters:
        - name: addressId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/addresses/{addressId}/links':
    post:
      tags:
        - Address Register
      operationId: postAddressLink
      summary: Add a link to an address
      parameters:
        - name: addressId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/addresses':  
    post:
      tags:
        - Address Register
      operationId: postInvestigationAddress
      summary: Add an address to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '201':
          description: Address created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          headers:
            location:
              description: URL for the newly created Address
              schema:
                type: string
  '/investigations/{investigationId}/addresses/{addressId}/attachments':
    post:
      tags:
        - Address Register
      operationId: postInvestigationAddressAttachment
      summary: Add an attachment to an address record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: addressId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  /animals:
    get:
      tags:
        - Animal Register
      operationId: getAllAnimals
      summary: Get a collection of animals
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
  '/animals/{animalId}':
    get:
      tags:
        - Animal Register
      operationId: getAnimal
      summary: Get an animal
      parameters:
        - name: animalId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Animal'
  '/animals/{animalId}/links':
    post:
      tags:
        - Animal Register
      operationId: postAnimalLink
      summary: Add a link to an animal
      parameters:
        - name: animalId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  /cases:
    get:
      tags:
        - Case Register
      operationId: getAllCases
      summary: Get a collection of cases
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Case Register
      operationId: postCase
      summary: Add a case
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
      responses:
        '201':
          description: Case created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          headers:
            location:
              description: URL for the newly created Case
              schema:
                type: string
  '/cases/{caseId}':
    get:
      tags:
        - Case Register
      operationId: getCase
      summary: Get a case
      parameters:
        - name: caseId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
  '/cases/{caseId}/attachments':
    post:
      tags:
        - Case Register
      operationId: postCaseAttachment
      summary: Add an attachment to a case
      parameters:
        - name: caseId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/cases/{caseId}/links':
    post:
      tags:
        - Case Register
      operationId: postCaseLink
      summary: Add a link to a case
      parameters:
        - name: caseId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/cases':  
    post:
      tags:
        - Case Register
      operationId: postInvestigationCase
      summary: Add a case to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
      responses:
        '201':
          description: Case created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          headers:
            location:
              description: URL for the newly created Case
              schema:
                type: string
  '/investigations/{investigationId}/cases/{caseId}/attachments':
    post:
      tags:
        - Case Register
      operationId: postInvestigationCaseAttachment
      summary: Add an attachment to a case record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: caseId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string

  /communications:
    get:
      tags:
        - Communication Register
      operationId: getAllCommunications
      summary: Get a collection of communications
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Communication Register
      operationId: postCommunication
      summary: Add a communication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Communication'
      responses:
        '201':
          description: Communication created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Communication'
          headers:
            location:
              description: URL for the newly created Communication
              schema:
                type: string
  '/communications/{communicationId}':
    get:
      tags:
        - Communication Register
      operationId: getCommunication
      summary: Get a communication
      parameters:
        - name: communicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Communication'
  '/communications/{communicationId}/attachments':
    post:
      tags:
        - Communication Register
      operationId: postCommunicationAttachment
      summary: Add an attachment to a communication
      parameters:
        - name: communicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/communications/{communicationId}/links':
    post:
      tags:
        - Communication Register
      operationId: postCommunicationLink
      summary: Add a link to a communication
      parameters:
        - name: communicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/communications':  
    post:
      tags:
        - Communication Register
      operationId: postInvestigationCommunication
      summary: Add a communication to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Communication'
      responses:
        '201':
          description: Communication created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Communication'
          headers:
            location:
              description: URL for the newly created Communication
              schema:
                type: string
  '/investigations/{investigationId}/communications/{communicationId}/attachments':
    post:
      tags:
        - Communication Register
      operationId: postInvestigationCommunicationAttachment
      summary: Add an attachment to a communication record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: communicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  /decisions:
    get:
      tags:
        - Decision Register
      operationId: getAllDecisions
      summary: Get a collection of decisions
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Decision Register
      operationId: postDecision
      summary: Add a decision
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Decision'
      responses:
        '201':
          description: Decision created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decision'
          headers:
            location:
              description: URL for the newly created Decision
              schema:
                type: string
  '/decisions/{decisionId}':
    get:
      tags:
        - Decision Register
      operationId: getDecision
      summary: Get a decision
      parameters:
        - name: decisionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decision'
  '/decisions/{decisionId}/attachments':
    post:
      tags:
        - Decision Register
      operationId: postDecisionAttachment
      summary: Add an attachment to a decision
      parameters:
        - name: decisionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/decisions/{decisionId}/links':
    post:
      tags:
        - Decision Register
      operationId: postDecisionLink
      summary: Add a link to a decision
      parameters:
        - name: decisionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string


  '/investigations/{investigationId}/decisions':  
    post:
      tags:
        - Decision Register
      operationId: postInvestigationDecision
      summary: Add a decision to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Decision'
      responses:
        '201':
          description: Decision created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decision'
          headers:
            location:
              description: URL for the newly created Decision
              schema:
                type: string
  '/investigations/{investigationId}/decisions/{decisionId}/attachments':
    post:
      tags:
        - Decision Register
      operationId: postInvestigationDecisionAttachment
      summary: Add an attachment to a decision record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: decisionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string


  /events:
    get:
      tags:
        - Event Register
      operationId: getAllEvents
      summary: Get a collection of events
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Event Register
      operationId: postEvent
      summary: Add an event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          headers:
            location:
              description: URL for the newly created Event
              schema:
                type: string
  '/events/{eventId}':
    get:
      tags:
        - Event Register
      operationId: getEvent
      summary: Get an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  '/events/{eventId}/attachments':
    post:
      tags:
        - Event Register
      operationId: postEventAttachment
      summary: Add an attachment to an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/events/{eventId}/links':
    post:
      tags:
        - Event Register
      operationId: postEventLink
      summary: Add a link to an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string



  '/events/{eventId}/stages':
    get:
      tags:
        - Event Register
      operationId: getAllEventStages
      summary: Get a collection of event stages
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Event Register
      operationId: postEventStage
      summary: Add a stage to an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stage'
      responses:
        '201':
          description: Stage created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
          headers:
            location:
              description: URL for the newly created Stage
              schema:
                type: string
  '/events/{eventId}/stages/{id}':
    get:
      tags:
        - Event Register
      operationId: getEventStage
      summary: Get a stage for an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'

  '/investigations/{investigationId}/events':
    post:
      tags:
        - Event Register
      operationId: postInvestigationEvent
      summary: Add an event to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          headers:
            location:
              description: URL for the newly created Event
              schema:
                type: string
  '/investigations/{investigationId}/events/{eventId}/attachments':
    post:
      tags:
        - Event Register
      operationId: postInvestigationEventAttachment
      summary: Add an attachment to an event within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/investigations/{investigationId}/events/{eventId}/stages':
    post:
      tags:
        - Event Register
      operationId: postInvestigationEventStage
      summary: Add a stage to an event
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stage'
      responses:
        '201':
          description: Stage created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
          headers:
            location:
              description: URL for the newly created Stage
              schema:
                type: string

  /incidents:
    get:
      tags:
        - Incident Register
      operationId: getAllIncidents
      summary: Get a collection of incidents
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Incident Register
      operationId: postIncident
      summary: Add an incident
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Incident'
      responses:
        '201':
          description: Incident created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          headers:
            location:
              description: URL for the newly created Incident
              schema:
                type: string

  '/incidents/{incidentId}':
    get:
      tags:
        - Incident Register
      operationId: getIncident
      summary: Get an incident
      parameters:
        - name: incidentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
  '/incidents/{incidentId}/attachments':
    post:
      tags:
        - Incident Register
      operationId: postIncidentAttachment
      summary: Add an attachment to an incident
      parameters:
        - name: incidentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/incidents/{incidentId}/investigator-notes':
    post:
      tags:
        - Incident Register
      operationId: postIncidentInvestigatorNote
      summary: Add an investigator note to an incident
      parameters:
        - name: incidentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created Investigator note
              schema:
                type: string
  '/incidents/{incidentId}/links':
    post:
      tags:
        - Incident Register
      operationId: postIncidentLink
      summary: Add a link to an incident
      parameters:
        - name: incidentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/incidents':
    post:
      tags:
        - Incident Register
      operationId: postInvestigationIncident
      summary: Add an incident to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Incident'
      responses:
        '201':
          description: Incident created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          headers:
            location:
              description: URL for the newly created Incident
              schema:
                type: string
  '/investigations/{investigationId}/incidents/{incidentId}/attachments':
    post:
      tags:
        - Incident Register
      operationId: postInvestigationIncidentAttachment
      summary: Add an attachment to an incident record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: incidentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/investigations/{investigationId}/incidents/{incidentId}/investigator-notes':
    post:
      tags:
        - Incident Register
      operationId: postInvestigationIncidentInvestigatorNote
      summary: Add an investigator note to an incident
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: incidentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created investigator note
              schema:
                type: string
  /intelligence:
    get:
      tags:
        - Intelligence Register
      operationId: getAllIntelligence
      summary: Get a collection of intelligence
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
  '/intelligence/{intelligenceId}':
    get:
      tags:
        - Intelligence Register
      operationId: getIntelligence
      summary: Get intelligence
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intelligence'
  '/intelligence/':
    post:
      tags:
        - Intelligence Register
      operationId: postIntelligence
      summary: Add intelligence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Intelligence'
      responses:
        '201':
          description: Intelligence created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intelligence'
          headers:
            location:
              description: URL for the newly created Intelligence
              schema:
                type: string
  '/intelligence/{intelligenceId}/attachments':
    post:
      tags:
        - Intelligence Register
      operationId: postIntelligenceAttachment
      summary: Add an attachment to an intelligence record
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/intelligence/{intelligenceId}/entries':
    get:
      tags:
        - Intelligence Register
      operationId: getAllIntelligenceEntries
      summary: Get a collection of intelligence entries
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Intelligence Register
      operationId: postIntelligenceEntry
      summary: Add an entry to an intelligence record
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntelligenceEntry'
      responses:
        '201':
          description: Intelligence entry created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntelligenceEntry'
          headers:
            location:
              description: URL for the newly created Intelligence entry
              schema:
                type: string
  '/intelligence/{intelligenceId}/entries/{id}':
    get:
      tags:
        - Intelligence Register
      operationId: getIntelligenceEntry
      summary: Get an Intelligence Entry for Intelligence
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntelligenceEntry'
  '/intelligence/{intelligenceId}/investigator-notes':
    get:
      tags:
        - Intelligence Register
      operationId: getAllIntelligenceInvestigatorNotes
      summary: Get a collection of investigator notes from intelligence
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Intelligence Register
      operationId: postIntelligenceInvestigatorNote
      summary: Add an investigator note to an intelligence record
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Intelligence investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created investigator note
              schema:
                type: string
  '/intelligence/{intelligenceId}/investigator-notes/{id}':
    get:
      tags:
        - Intelligence Register
      operationId: getIntelligenceInvestigatorNote
      summary: Get an investigator note for an intelligence record
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
  '/intelligence/{intelligenceId}/links':
    post:
      tags:
        - Intelligence Register
      operationId: postIntelligenceLink
      summary: Add a link to an intelligence record
      parameters:
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/intelligence':
    post:
      tags:
        - Intelligence Register
      operationId: postInvestigationIntelligence
      summary: Add intelligence to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Intelligence'
      responses:
        '201':
          description: Intelligence created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intelligence'
          headers:
            location:
              description: URL for the newly created Intelligence
              schema:
                type: string
  '/investigations/{investigationId}/intelligence/{intelligenceId}/attachments':
    post:
      tags:
        - Intelligence Register
      operationId: postInvestigationIntelligenceAttachment
      summary: Add an attachment to an intelligence record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/investigations/{investigationId}/intelligence/{intelligenceId}/entries':
    post:
      tags:
        - Intelligence Register
      operationId: postInvestigationIntelligenceEntry
      summary: Add an entry to an intelligence record
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntelligenceEntry'
      responses:
        '201':
          description: Intelligence entry created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntelligenceEntry'
          headers:
            location:
              description: URL for the newly created Intelligence entry
              schema:
                type: string
  '/investigations/{investigationId}/intelligence/{intelligenceId}/investigator-notes':
    post:
      tags:
        - Intelligence Register
      operationId: postInvestigationIntelligenceInvestigatorNote
      summary: Add an investigator note to an intelligence record
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: intelligenceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Intelligence investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created investigator note
              schema:
                type: string
                
  /investigations:
    get:
      tags:
        - Investigation Register
      operationId: getAllInvestigations
      summary: Get a collection of investigations
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Investigation Register
      operationId: postInvestigation
      summary: Add an investigation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Investigation'
      responses:
        '201':
          description: Investigation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investigation'
          headers:
            location:
              description: URL for the newly created Investigation
              schema:
                type: string
  '/investigations/{investigationId}':
    get:
      tags:
        - Investigation Register
      operationId: getInvestigation
      summary: Get an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response


  '/investigations/{investigationId}/investigator-notes':
    get:
      tags:
        - Investigation Register
      operationId: getAllInvestigationInvestigatorNotes
      summary: Get a collection of investigator notes from an investigation record
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Investigation Register
      operationId: postInvestigationInvestigatorNote
      summary: Add an investigator note to an investigation record
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created investigator note
              schema:
                type: string
  '/investigations/{investigationId}/investigator-notes/{id}':
    get:
      tags:
        - Investigation Register
      operationId: getInvestigationInvestigatorNote
      summary: Get an investigator note for an investigation record
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
  '/investigations/{investigationId}/investigation-team/teams':
    put:
      tags:
        - Investigation Register
      operationId: putInvestigationInvestigationTeamTeams
      summary: Add a team to an investigation team to provide access to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: A successful response
  '/investigations/{investigationId}/investigation-team/users':
    put:
      tags:
        - Investigation Register
      operationId: putInvestigationInvestigationTeamUsers
      summary: Add a user to an investigation team to provide access to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: A successful response
  '/investigations/{investigationId}/links':
    post:
      tags:
        - Investigation Register
      operationId: postInvestigationLink
      summary: Add a link to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string

  /material:
    get:
      tags:
        - Material Register
      operationId: getAllMaterial
      summary: Get a collection of material
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Material Register
      operationId: postMaterial
      summary: Add a material record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
      responses:
        '201':
          description: Material record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          headers:
            location:
              description: URL for the newly created Material record
              schema:
                type: string
  '/material/{materialId}':
    get:
      tags:
        - Material Register
      operationId: getMaterial
      summary: Get material
      parameters:
        - name: materialId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
  '/material/{materialId}/attachments':
    post:
      tags:
        - Material Register
      operationId: postMaterialAttachment
      summary: Add an attachment to material
      parameters:
        - name: materialId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/material/{materialId}/investigator-notes':
    post:
      tags:
        - Material Register
      operationId: postMaterialInvestigatorNote
      summary: Add an investigator note to a material record
      parameters:
        - name: materialId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created Investigator note
              schema:
                type: string
  '/material/{materialId}/links':
    post:
      tags:
        - Material Register
      operationId: postMaterialLink
      summary: Add a link to an material
      parameters:
        - name: materialId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/material/{materialId}/movements':
    post:
      tags:
        - Material Register
      operationId: postMaterialMovement
      summary: Add a movement to a material record
      parameters:
        - name: materialId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movement'
      responses:
        '201':
          description: Movement created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          headers:
            location:
              description: URL for the newly created Movement
              schema:
                type: string
  '/investigations/{investigationId}/material':
    post:
      tags:
        - Material Register
      operationId: postInvestigationMaterial
      summary: Add a material record to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material'
      responses:
        '201':
          description: Material record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
          headers:
            location:
              description: URL for the newly created Material record
              schema:
                type: string
  '/investigations/{investigationId}/material/{materialId}/attachments':
    post:
      tags:
        - Material Register
      operationId: postInvestigationMaterialAttachment
      summary: Add an attachment to a material record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: materialId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/investigations/{investigationId}/material/{materialId}/investigator-notes':
    post:
      tags:
        - Material Register
      operationId: postInvestigationMaterialInvestigatorNote
      summary: Add an investigator note to a material
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: materialId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created investigator note
              schema:
                type: string
  '/investigations/{investigationId}/material/{materialId}/movements':
    post:
      tags:
        - Material Register
      operationId: postInvestigationMaterialMovement
      summary: Add a movement to a material
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: materialId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movement'
      responses:
        '201':
          description: Movement created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          headers:
            location:
              description: URL for the newly created movement
              schema:
                type: string
  /organisations:
    get:
      tags:
        - Organisation Register
      operationId: getAllOrganisations
      summary: Get a collection of organisations
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Organisation Register
      operationId: postOrganisation
      summary: Add an organisation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      responses:
        '201':
          description: Organisation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          headers:
            location:
              description: URL for the newly created Organisation
              schema:
                type: string
  '/organisations/{organisationId}':
    get:
      tags:
        - Organisation Register
      operationId: getOrganisation
      summary: Get an organisation
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
  '/organisations/{organisationId}/attachments':
    post:
      tags:
        - Organisation Register
      operationId: postOrganisationAttachment
      summary: Add an attachment to an organisation
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/organisations/{organisationId}/links':
    post:
      tags:
        - Organisation Register
      operationId: postOrganisationLink
      summary: Add a link to an organisation
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/organisations':
    post:
      tags:
        - Organisation Register
      operationId: postInvestigationOrganisation
      summary: Add an organisation to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      responses:
        '201':
          description: Organisation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          headers:
            location:
              description: URL for the newly created Organisation
              schema:
                type: string
  '/investigations/{investigationId}/organisations/{organisationId}/attachments':
    post:
      tags:
        - Organisation Register
      operationId: postInvestigationOrganisationAttachment
      summary: Add an attachment to an organisation record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: organisationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  /outcomes:
    get:
      tags:
        - Outcome Register
      operationId: getAllOutcomes
      summary: Get a collection of outcomes
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Outcome Register
      operationId: postOutcome
      summary: Add a outcome
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outcome'
      responses:
        '201':
          description: Outcome created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outcome'
          headers:
            location:
              description: URL for the newly created Outcome
              schema:
                type: string
  '/outcomes/{outcomeId}':
    get:
      tags:
        - Outcome Register
      operationId: getOutcome
      summary: Get a outcome
      parameters:
        - name: outcomeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outcome'
  '/outcomes/{outcomeId}/attachments':
    post:
      tags:
        - Outcome Register
      operationId: postOutcomeAttachment
      summary: Add an attachment to a outcome
      parameters:
        - name: outcomeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/outcomes/{outcomeId}/links':
    post:
      tags:
        - Outcome Register
      operationId: postOutcomeLink
      summary: Add a link to a outcome
      parameters:
        - name: outcomeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string


  '/investigations/{investigationId}/outcomes':  
    post:
      tags:
        - Outcome Register
      operationId: postInvestigationOutcome
      summary: Add an outcome to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outcome'
      responses:
        '201':
          description: Outcome created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outcome'
          headers:
            location:
              description: URL for the newly created Outcome
              schema:
                type: string
  '/investigations/{investigationId}/outcomes/{outcomeId}/attachments':
    post:
      tags:
        - Outcome Register
      operationId: postInvestigationOutcomeAttachment
      summary: Add an attachment to an outcome record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: outcomeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string

  /persons:
    get:
      tags:
        - Person Register
      operationId: getAllPersons
      summary: Get a collection of persons
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Person Register
      operationId: postPerson
      summary: Add a person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          headers:
            location:
              description: URL for the newly created Person
              schema:
                type: string
  '/persons/{personId}':
    get:
      tags:
        - Person Register
      operationId: getPerson
      summary: Get a person
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  '/persons/{personId}/attachments':
    post:
      tags:
        - Person Register
      operationId: postPersonAttachment
      summary: Add an attachment to a person
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/persons/{personId}/links':
    post:
      tags:
        - Person Register
      operationId: postPersonLink
      summary: Add a link to a person
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/persons/{personId}/personal-documents':
    get:
      tags:
        - Person Register
      operationId: getAllPersonPersonalDocuments
      summary: Get a collection of personal documents from a person
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Person Register
      operationId: postPersonPersonalDocument
      summary: Add a personal document to a person
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalDocument'
      responses:
        '201':
          description: Personal document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalDocument'
          headers:
            location:
              description: URL for the newly created personal document
              schema:
                type: string
  '/persons/{personId}/personal-documents/{id}':
    get:
      tags:
        - Person Register
      operationId: getPersonPersonalDocument
      summary: Get a personal document for a person
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalDocument'
  '/investigations/{investigationId}/persons':  
    post:
      tags:
        - Person Register
      operationId: postInvestigationPerson
      summary: Add a person to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          headers:
            location:
              description: URL for the newly created Person
              schema:
                type: string
  '/investigations/{investigationId}/persons/{personId}/attachments':
    post:
      tags:
        - Person Register
      operationId: postInvestigationPersonAttachment
      summary: Add an attachment to a person record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/investigations/{investigationId}/persons/{personId}/personal-documents':
    post:
      tags:
        - Person Register
      operationId: postInvestigationPersonPersonalDocument
      summary: Add a personal document to a person
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalDocument'
      responses:
        '201':
          description: Personal document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalDocument'
          headers:
            location:
              description: URL for the newly created personal document
              schema:
                type: string
  /staff:
    get:
      tags:
        - Staff Register
      operationId: getAllStaff
      summary: Get a collection of staff
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Staff Register
      operationId: postStaff
      summary: Add a staff member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '201':
          description: Staff created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          headers:
            location:
              description: URL for the newly created Staff
              schema:
                type: string
  '/staff/{staffId}':
    get:
      tags:
        - Staff Register
      operationId: getStaff
      summary: Get staff
      parameters:
        - name: staffId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
  '/staff/{staffId}/attachments':
    post:
      tags:
        - Staff Register
      operationId: postStaffAttachment
      summary: Add an attachment to a staff member
      parameters:
        - name: staffId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/staff/{staffId}/links':
    post:
      tags:
        - Staff Register
      operationId: postStaffLink
      summary: Add a link to a staff member
      parameters:
        - name: staffId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/staff':  
    post:
      tags:
        - Staff Register
      operationId: postInvestigationStaff
      summary: Add a staff member to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '201':
          description: Staff created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          headers:
            location:
              description: URL for the newly created staff member
              schema:
                type: string
  '/investigations/{investigationId}/staff/{staffId}/attachments':
    post:
      tags:
        - Staff Register
      operationId: postInvestigationStaffAttachment
      summary: Add an attachment to a staff record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: staffId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  /statements:
    get:
      tags:
        - Statement Register
      operationId: getAllStatements
      summary: Get a collection of statements
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Statement Register
      operationId: postStatement
      summary: Add a statement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Statement'
      responses:
        '201':
          description: Statement created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
          headers:
            location:
              description: URL for the newly created Statement
              schema:
                type: string
  '/statements/{statementId}':
    get:
      tags:
        - Statement Register
      operationId: getStatement
      summary: Get a statement
      parameters:
        - name: statementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
  '/statements/{statementId}/attachments':
    post:
      tags:
        - Statement Register
      operationId: postStatementAttachment
      summary: Add an attachment to a statement
      parameters:
        - name: statementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/statements/{statementId}/investigator-notes':
    post:
      tags:
        - Statement Register
      operationId: postStatementInvestigatorNote
      summary: Add an investigator note to a statement
      parameters:
        - name: statementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created Investigator note
              schema:
                type: string
  '/statements/{statementId}/links':
    post:
      tags:
        - Statement Register
      operationId: postStatementLink
      summary: Add a link to a statement
      parameters:
        - name: statementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/statements':  
    post:
      tags:
        - Statement Register
      operationId: postInvestigationStatement
      summary: Add a statement to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Statement'
      responses:
        '201':
          description: Statement created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
          headers:
            location:
              description: URL for the newly created statement
              schema:
                type: string
  '/investigations/{investigationId}/statements/{statementId}/attachments':
    post:
      tags:
        - Statement Register
      operationId: postInvestigationStatementAttachment
      summary: Add an attachment to a statement record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: statementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/investigations/{investigationId}/statements/{statementId}/investigator-notes':
    post:
      tags:
        - Statement Register
      operationId: postInvestigationStatementInvestigatorNote
      summary: Add an investigator note to a statement
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: statementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created investigator note
              schema:
                type: string
  /tasks:
    get:
      tags:
        - Task Register
      operationId: getAllTasks
      summary: Get a collection of tasks
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Task Register
      operationId: postTask
      summary: Add a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          headers:
            location:
              description: URL for the newly created Task
              schema:
                type: string

  '/tasks/{taskId}':
    get:
      tags:
        - Task Register
      operationId: getTask
      summary: Get a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  '/task/{taskId}/attachments':
    post:
      tags:
        - Task Register
      operationId: postTaskAttachment
      summary: Add an attachment to a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/tasks/{taskId}/investigator-notes':
    post:
      tags:
        - Task Register
      operationId: postTaskInvestigatorNote
      summary: Add an investigator note to a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created Investigator note
              schema:
                type: string
  '/tasks/{taskId}/links':
    post:
      tags:
        - Task Register
      operationId: postTaskLink
      summary: Add a link to a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/tasks':  
    post:
      tags:
        - Task Register
      operationId: postInvestigationTask
      summary: Add a task to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          headers:
            location:
              description: URL for the newly created Task
              schema:
                type: string
  '/investigations/{investigationId}/tasks/{taskId}/attachments':
    post:
      tags:
        - Task Register
      operationId: postInvestigationTaskAttachment
      summary: Add an attachment to a task within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/investigations/{investigationId}/tasks/{taskId}/investigator-notes':
    post:
      tags:
        - Task Register
      operationId: postInvestigationTaskInvestigatorNote
      summary: Add an investigator note to a task
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigatorNote'
      responses:
        '201':
          description: Investigator note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigatorNote'
          headers:
            location:
              description: URL for the newly created investigator note
              schema:
                type: string
  /vehicles:
    get:
      tags:
        - Vehicle Register
      operationId: getAllVehicles
      summary: Get a collection of vehicles
      parameters:
        - name: page
          description: The page to retrieve
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          description: The number of items per page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A successful response
    post:
      tags:
        - Vehicle Register
      operationId: postVehicle
      summary: Add a vehicle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '201':
          description: Vehicle created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          headers:
            location:
              description: URL for the newly created Vehicle
              schema:
                type: string
  '/vehicles/{vehicleId}':
    get:
      tags:
        - Vehicle Register
      operationId: getVehicle
      summary: Get a vehicle
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
  '/vehicles/{vehicleId}/attachments':
    post:
      tags:
        - Vehicle Register
      operationId: postVehicleAttachment
      summary: Add an attachment to a vehicle
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
  '/vehicles/{vehicleId}/links':
    post:
      tags:
        - Vehicle Register
      operationId: postVehicleLink
      summary: Add a link to a vehicle
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          headers:
            location:
              description: URL for the newly created Link
              schema:
                type: string
  '/investigations/{investigationId}/vehicles':  
    post:
      tags:
        - Vehicle Register
      operationId: postInvestigationVehicle
      summary: Add a vehicle to an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '201':
          description: Vehicle created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          headers:
            location:
              description: URL for the newly created Vehicle
              schema:
                type: string
  '/investigations/{investigationId}/vehicles/{vehicleId}/attachments':
    post:
      tags:
        - Vehicle Register
      operationId: postInvestigationVehicleAttachment
      summary: Add an attachment to a vehicle record within an investigation
      parameters:
        - name: investigationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: vehicleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '201':
          description: Attachment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          headers:
            location:
              description: URL for the newly created Attachment
              schema:
                type: string
components:
  schemas:
    Address:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        RecordType:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        RelevantHistory:
          type: string
        FurtherDetails:
          type: string
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Notes:
          type: string
        Type:
          type: string
          maxLength: 255
        AddressLine1:
          type: string
          maxLength: 60
        AddressLine2:
          type: string
          maxLength: 60
        AddressLine3:
          type: string
          maxLength: 60
        AddressLine4:
          type: string
          maxLength: 60
        AddressLine5:
          type: string
          maxLength: 60
        AddressLine6:
          type: string
          maxLength: 60
        Postcode:
          type: string
          maxLength: 8
        Country:
          type: string
          maxLength: 60
        Easting:
          type: number
          format: float
        Northing:
          type: number
          format: float
        Latitude:
          type: number
          format: float
        Longitude:
          type: number
          format: float
        FullAddress:
          type: string
          readOnly: true
        SecurityClassification:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Animal:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        RecordType:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        RelevantHistory:
          type: string
        FurtherDetails:
          type: string
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Notes:
          type: string
        Name:
          type: string
          maxLength: 100
        Type:
          type: string
          maxLength: 255
        Gender:
          type: string
          maxLength: 255
        IsCalculatedDateOfBirth:
          type: boolean
        DateOfBirth:
          type: string
          format: date
        Breed:
          type: string
          maxLength: 255
        Colour:
          type: string
          maxLength: 255
        Height:
          type: string
          maxLength: 255
        Category:
          type: string
          maxLength: 255
        AllocatedTo:
          type: string
          maxLength: 255
        IsDeceased:
          type: boolean
        DateOfDeath:
          type: string
          format: date
        DateDeathPaperworkReceived:
          type: string
          format: date
        DatePassportReceived:
          type: string
          format: date
        CauseOfDeath:
          type: string
          maxLength: 255
        LocationOfDeath:
          type: string
          maxLength: 255
        DateReceived:
          type: string
          format: date
        LocationReceived:
          type: string
          maxLength: 255
        ProsecutionInfo:
          type: string
          maxLength: 255
        DeathValidated:
          type: boolean
        SecurityClassification:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Attachment:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Caption:
          title: Caption
          description: Caption
          type: string
          maxLength: 1000
        OriginalFilename:
          title: OriginalFilename
          description: Original filename
          type: string
          maxLength: 2000
        Type:
          title: Type
          description: Type
          type: string
          maxLength: 255
    Case:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        RecordType:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Title:
          type: string
          maxLength: 255
        Summary:
          type: string
        SecurityClassification:
          type: string
        StartDate:
          type: string
          format: date
        CloseDate:
          type: string
          format: date
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        NumberOfHorsesInvolved:
          type: integer
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Notes:
          type: string
        IsDeriveLinked:
          type: boolean
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        OtherReference:
          type: string
          maxLength: 50
        Jurisdiction:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Communication:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        RecordType:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        RelevantHistory:
          type: string
        FurtherDetails:
          type: string
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Notes:
          type: string
        ServiceProvider:
          type: string
          maxLength: 255
        NumberOrAddress:
          type: string
          maxLength: 320
        Type:
          type: string
          maxLength: 255
        CountryCode:
          type: string
          maxLength: 5
        Country:
          type: string
          maxLength: 255
        StdCode:
          type: string
          maxLength: 10
        Exchange:
          type: string
          maxLength: 255
        SecurityClassification:
          type: string
          maxLength: 255
        Manufacturer:
          type: string
          maxLength: 255
        Model:
          type: string
          maxLength: 255
        ModelNumber:
          type: string
          maxLength: 255
        Format:
          type: string
          maxLength: 255
        Network:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Decision:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        DecisionMade:
          type: string
        Reason:
          type: string
        DateTimeOfDecision:
          type: string
          format: date-time
        SecurityClassification:
          type: string
          maxLength: 255
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Personnel:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Event:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        DateTimeOccurred:
          type: string
          format: date-time
        Officer:
          type: string
          maxLength: 255
        Title:
          type: string
        Notes:
          type: string
        Team:
          type: string
          maxLength: 255
        SecurityClassification:
          type: string
          maxLength: 255
        UniqueSequenceNumber:
          type: string
          maxLength: 255
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Incident:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        Type:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        IncidentDate:
          type: string
          format: date
        TakenBy:
          type: string
          maxLength: 255
        HowReported:
          type: string
          maxLength: 255
        DateReported:
          type: string
          format: date
        AssignedTo:
          type: string
          maxLength: 255
        Priority:
          type: string
          maxLength: 255
        DateCompleted:
          type: string
          format: date
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Subject:
          type: string
          maxLength: 255
        Notes:
          type: string
        SourceEvaluation:
          type: string
          maxLength: 255
        IntelligenceEvaluation:
          type: string
          maxLength: 255
        HandlingCode:
          type: string
          maxLength: 255
        SecurityClassification:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Intelligence:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        CollarWarrantNumberFIN:
          type: string
          maxLength: 25
        OrganisationForceNumber:
          type: string
          maxLength: 25
        CreationSubmissionDateTime:
          type: string
          format: date-time
        OperationNameNumber:
          type: string
          maxLength: 255
        ReportTitle:
          type: string
          maxLength: 255
        SecurityClassification:
          type: string
          maxLength: 255
        OccurrenceDateTime:
          type: string
          format: date-time
        Reevaluated:
          type: boolean
        ReviewDateTime:
          type: string
          format: date-time
        Status:
          type: string
          maxLength: 255
        ReviewedBy:
          type: string
          maxLength: 255
        IntelligenceNumber:
          type: string
          maxLength: 255
        GenerationVersion:
          type: string
          maxLength: 255
        OccurrenceEndDateTime:
          type: string
          format: date-time
        DetailedHandlingInstructions:
          type: string
        ActionCode:
          type: string
          maxLength: 255
        ActionCodeA3UsageInstruction:
          type: string
          maxLength: 3000
        Sanitisation:
          type: string
          maxLength: 255
        ConfidenceLevel:
          type: string
          maxLength: 255
        PublicInterestImmunity:
          type: boolean
        SourceEvaluationSuppInfo:
          type: string
        IntelligenceAssmtSuppInfo:
          type: string
        HandlingConditionsSuppInfo:
          type: string
        OverallSourceEvaluation:
          type: string
          maxLength: 255
        OverallIntelligenceAssessment:
          type: string
          maxLength: 255
        OverallHandlingCode:
          type: string
          maxLength: 255
        OrganisationName:
          type: string
          maxLength: 255
        OriginalCreatedDateTime:
          type: string
          format: date-time
        IsCopy:
          type: boolean
        CopyNumber:
          type: integer
          format: int32
        SourceISRReferenceNumber:
          type: string
          maxLength: 2000
        ReviewPeriod:
          type: string
          maxLength: 255
        OnReviewDate:
          type: string
          format: date
        CreatorTeam:
          type: string
          maxLength: 255
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        Summary:
          type: string
        NotificationLastSent:
          type: string
          format: date-time
        CreatedFromExternalSource:
          type: boolean
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    IntelligenceEntry:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Description:
          title: Description
          description: Description
          type: string
        SourceEvaluation:
          title: Source Evaluation
          description: Source evaluation
          type: string
          maxLength: 255
        IntelligenceAssessment:
          title: Intelligence Assessment
          description: Intelligence assessment
          type: string
          maxLength: 255
        HandlingCode:
          title: Handling Code
          description: Handling code
          type: string
          maxLength: 255
      

    Investigation:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Status:
          type: string
          maxLength: 255
        Title:
          type: string
        Reference:
          type: string
          maxLength: 255
        Summary:
          type: string
        StartDate:
          type: string
          format: date-time
        CloseDate:
          type: string
          format: date-time
        LeadInvestigator:
          type: string
          maxLength: 255
        SecurityClassification:
          type: string
          maxLength: 255
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    InvestigatorNote:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Personnel:
          title: Personnel
          description: Personnel
          type: string
          maxLength: 255
        DateTimeOfOccurrence:
          title: Date/Time of Occurrence
          description: Date/Time of Occurrence
          type: string
          format: date-time
        Type:
          title: Type
          description: Type
          type: string
          maxLength: 255
        Notes:
          title: Notes
          description: Notes
          type: string
    Link:
      type: object
      properties:
        LinkTypeId:
          type: string
        TargetType:
          type: string
        TargetId:
          type: integer
        Reason:
          type: string
        ReverseReason:
          type: string
        Description:
          type: string
        DateFrom:
          type: string
          format: date
        DateTo:
          type: string
          format: date
        Notes:
          type: string
    Material:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Title:
          type: string
          maxLength: 255
        IsExhibit:
          type: boolean
        Reference:
          type: string
          maxLength: 25
        ExternalReference:
          type: string
          maxLength: 25
        WhenFound:
          type: string
          format: date-time
        Notes:
          type: string
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        Commodity:
          type: string
          maxLength: 255
        ClassOfDrug:
          type: string
          maxLength: 255
        Quantity:
          type: number
          format: double
        Unit:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        SecurityClassification:
          type: string
          maxLength: 255
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Measure:
          type: string
          maxLength: 255
        CostValueStatus:
          type: string
          maxLength: 255
        CostValue:
          type: number
          format: double
        CurrentLocation:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Movement:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Date:
          title: Date
          description: Date of movement
          type: string
          format: date
        Time:
          title: Time
          description: Time of movement
          type: string
          format: time
          readOnly: true
        ByWhomName:
          title: To Person/Staff
          description: To person or staff member
          type: string
          maxLength: 255
          readOnly: true
        FromWhomName:
          title: From Person/Staff
          description: From person or staff member
          type: string
          maxLength: 255
          readOnly: true
        Reason:
          title: Reason
          description: Reason
          type: string
        SealNumber:
          title: Seal Number
          description: Seal Number
          type: string
          maxLength: 255
        ReceiptBookEntry:
          title: Receipt Book entry
          description: Receipt Book Entry
          type: string
          maxLength: 255
        ByWhomId:
          title: By whom Id
          description: By whom Id
          type: integer
        ToLocationId:
          title: To location Id
          description: To location Id
          type: integer
        FromWhomId:
          title: From whom Id
          description: From whom Id
          type: integer
        FromLocationId:
          title: From location Id
          description: From location Id
          type: integer
    Organisation:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        RecordType:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        RelevantHistory:
          type: string
        FurtherDetails:
          type: string
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Notes:
          type: string
        Name:
          type: string
          maxLength: 100
        VatNumber:
          type: string
          maxLength: 17
        RegistrationNumber:
          type: string
          maxLength: 10
        DateOfIncorporation:
          type: string
          format: date
        LineOfBusiness:
          type: string
          maxLength: 50
        DateLiquidated:
          type: string
          format: date
        LiquidationDetails:
          type: string
        Accountants:
          type: string
          maxLength: 100
        DateAccountsLastSubmitted:
          type: string
          format: date
        CivilLitigation:
          type: string
          maxLength: 100
        SecurityClassification:
          type: string
          maxLength: 255
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Outcome:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        Title:
          type: string
        SecurityClassification:
          type: string
          maxLength: 255
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Person:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        RecordType:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        RelevantHistory:
          type: string
        FurtherDetails:
          type: string
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Notes:
          type: string
        Title:
          type: string
          maxLength: 255
        Forename:
          type: string
          maxLength: 100
        Surname:
          type: string
          maxLength: 100
        FullName:
          type: string
          maxLength: 1000
          readOnly: true
        IsCalculatedDateOfBirth:
          type: boolean
        DateOfBirth:
          type: string
          format: date
        PlaceOfBirth:
          type: string
          maxLength: 255
        Gender:
          type: string
          maxLength: 255
        Height:
          type: string
          maxLength: 255
        Ethnicity:
          type: string
          maxLength: 50
        Religion:
          type: string
          maxLength: 255
        Nationality:
          type: string
          maxLength: 255
        Occupation:
          type: string
          maxLength: 255
        IsDeceased:
          type: boolean
        DateOfDeath:
          type: string
          format: date
        PNCID:
          type: string
          maxLength: 13
        SecurityClassification:
          type: string
          maxLength: 255
        IPIN:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        CalculatedDateOfBirth:
          type: string
          format: date
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
        PreferredLanguage:
          title: Preferred Language
          type: string
          maxLength: 255
        SelfDefinedDisability:
          title: Self-Defined Disability
          type: string
          maxLength: 255
    SelfDefinedEthnicity:
          title: Self-Defined Ethnicity
          type: string
          maxLength: 255
    PersonalDocument:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        DocumentType:
          title: Document Type
          description: Type of Document
          type: string
          maxLength: 255
        DocumentNumber:
          title: Document Number
          description: Document Number
          type: string
          maxLength: 255
        Notes:
          title: Notes
          description: Notes
          type: string
    Staff:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        RecordType:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        RelevantHistory:
          type: string
        FurtherDetails:
          type: string
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Notes:
          type: string
        Title:
          type: string
          maxLength: 255
        Forename:
          type: string
          maxLength: 100
        Surname:
          type: string
          maxLength: 100
        FullName:
          type: string
          maxLength: 1000
          readOnly: true
        IsCalculatedDateOfBirth:
          type: boolean
        DateOfBirth:
          type: string
          format: date
        PlaceOfBirth:
          type: string
          maxLength: 255
        Gender:
          type: string
          maxLength: 255
        Height:
          type: string
          maxLength: 255
        Ethnicity:
          type: string
          maxLength: 50
        Religion:
          type: string
          maxLength: 255
        Nationality:
          type: string
          maxLength: 255
        Occupation:
          type: string
          maxLength: 255
        IsDeceased:
          type: boolean
        DateOfDeath:
          type: string
          format: date
        PNCID:
          type: string
          maxLength: 13
        SecurityClassification:
          type: string
          maxLength: 255
        IPIN:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        CalculatedDateOfBirth:
          type: string
          format: date
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Stage:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Type:
          title: Type
          description: Type
          type: string
          maxLength: 255
        Outcome:
          title: Outcome
          description: Outcome
          type: string
          maxLength: 255
        Notes:
          title: Notes
          description: Notes
          type: string
    Statement:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Title:
          type: string
        Text:
          type: string
        DateTaken:
          type: string
          format: date
        TimeTaken:
          type: string
          format: time
        SecurityClassification:
          type: string
          maxLength: 255
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Description:
          type: string
        Type:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Task:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Type:
          type: string
          maxLength: 50
        Subtype:
          type: string
          maxLength: 50
        Status:
          type: string
          maxLength: 50
        Source:
          type: string
          maxLength: 255
        Priority:
          type: string
          maxLength: 255
        Subject:
          type: string
          maxLength: 255
        Description:
          type: string
        StartDate:
          type: string
          format: date
        StartTime:
          type: string
          format: time
        EndDate:
          type: string
          format: date
        EndTime:
          type: string
          format: time
        Duration:
          type: integer
          format: int64
        Result:
          type: string
        OwnedByAsText:
          type: string
          maxLength: 255
        AllocatedByAsText:
          type: string
          maxLength: 255
        AllocatedToAsText:
          type: string
          maxLength: 255
        SecurityClassification:
          type: string
          maxLength: 255
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        IsTeam:
          type: boolean
        NotifyAllocatorOnCompletion:
          type: boolean
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
    Team:
      type: object
      properties:
        Name:
          type: string
          maxLength: 255
    User:
      type: object
      properties:
        Username:
          type: string
          maxLength: 255
    Vehicle:
      type: object
      properties:
        DateCreated:
          title: Date Created
          description: The date and time the record was created
          type: string
          format: date-time
          readOnly: true
        CreatedBy:
          title: Creator
          description: The user who created the record
          type: string
          maxLength: 255
          readOnly: true
        DateLastUpdated:
          title: Date Last Updated
          description: The date and time the record was last updated
          type: string
          format: date-time
          readOnly: true
        LastUpdatedBy:
          title: Last Updated By
          description: The user who last updated the record
          type: string
          maxLength: 255
          readOnly: true
        Urn:
          title: URN
          description: The URN of the record
          type: string
          maxLength: 15
          readOnly: true
        CustomFields:
          title: Custom Fields
          type: object
        Reference:
          type: string
          maxLength: 50
        RecordType:
          type: string
          maxLength: 255
        RecordStatus:
          type: string
          maxLength: 255
        Status:
          type: string
          maxLength: 255
        Source:
          type: string
          maxLength: 255
        Reason:
          type: string
          maxLength: 255
        RelevantHistory:
          type: string
        FurtherDetails:
          type: string
        ReviewPeriod:
          type: string
          maxLength: 255
        ReviewDate:
          type: string
          format: date
        Notes:
          type: string
        Registration:
          type: string
          maxLength: 15
        Class:
          type: string
          maxLength: 255
        Make:
          type: string
          maxLength: 255
        Model:
          type: string
          maxLength: 255
        Colour:
          type: string
          maxLength: 255
        Flag:
          type: string
          maxLength: 255
        Name:
          type: string
          maxLength: 50
        HomePort:
          type: string
          maxLength: 1000
        PortOfRegistration:
          type: string
          maxLength: 1000
        MastCount:
          type: string
          maxLength: 20
        SailCount:
          type: string
          maxLength: 20
        SteeringClass:
          type: string
          maxLength: 255
        SecurityClassification:
          type: string
          maxLength: 255
        Subtype:
          type: string
          maxLength: 255
        RetainPeriod:
          type: string
          maxLength: 255
        RetainDate:
          type: string
          format: date
